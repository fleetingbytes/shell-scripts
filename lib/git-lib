add_commit_push() {
    local changed_file=$1
    local message=$2
    local file_name=$(basename "$changed_file")
    local directory=$(dirname "$changed_file")

    printf "$YELLOW%s$NORMAL %s\n" "Staging" "$file_name"
    git -C "$directory" add "$file_name"

    printf "$YELLOW%s$NORMAL %s $CYAN%s$NORMAL\n" "Commiting" "$file_name" "$message"
    git -C "$directory" commit --message="$message"

    printf "$YELLOW%s$NORMAL %s\n" "Pushing" "$file_name"
    git -C "$directory" push
}

remote_has_changed() {
    local directory=$1
    git -C "$directory" fetch --dry-run 2>&1 | grep -q "."
}


remote_url_for_origin_already_exists() {
    local project_dir=$1
    git -C "$project_dir" remote | grep -q origin
}

add_remote_url() {
    local project_dir=$1
    local remote_url=$2
    printf "Set remote URL ... "
    if remote_url_for_origin_already_exists $project_dir; then
        printf "origin already exists\n"
    else
        if git -C "$project_dir" remote add origin "$remote_url"; then
            printf "Ok\n"
        fi
    fi
}

count_local_commits() {
    local directory=$1
    if ! git -C "$directory" rev-parse HEAD > /dev/null 2>&1; then
        echo "0"
        return 0
    fi
    git -C "$directory" rev-list --count HEAD
}

get_default_branch_name() {
    git config --get init.defaultBranch
}

push_local_repository_to_the_remote() {
    local directory=$1
    if [ $(count_local_commits "$directory") -ne 0 ]; then
        printf "$CYAN%s$NORMAL\n" "Pushing local repository to the remote"
        default_branch=$(get_default_branch_name)
        git -C "$directory" push --set-upstream origin "$default_branch"
    else
        printf "$YELLOW%s$NORMAL\n" "Local repository has no commits yet, nothing to push"
    fi
}
